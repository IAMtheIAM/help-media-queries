/*
  NOTE: Remember to disable the tooltip when you are on production
*/
$hmq-enable-tooltip: true;
$hmq-enable-random-color: false;


/*
  Responsive settings
  I suggest you to use this breakpoints for your media queries.
*/
$breakpoints: (
  extraSmall : 30em,
  small      : 48em,
  medium     : 60em,
  large      : 80em,
  extraLarge : 100em
) !default;


/*
  Screen densities.
  You don't need to change this values.
*/
$densities: (
  1x  : '96dpi',
  15x : '144dpi',
  2x  : '192dpi',
  3x  : '288dpi',
  4x  : '384dpi'
) !default;




// ↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧↧
// ⛔️ DON'T EDIT UNDER THIS LINE ⛔️
// ↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥↥

/*
  Get breakpoint argument name from te $breakpoints map
  and return media query with his value.
  NOTE This require a $breakpoints map.
  Ex: @media screen and (break(BREAKPOINT_NAME)) {...}
*/
@function break($key) {
  @if map-has-key($breakpoints, $key) {
    @return 'min-width: #{ map-get( $breakpoints, $key ) }';
  }
}


/*
  Get density argument name from the $densities map
  and return the media query with his value.
  NOTE This require a $densities map.
  Ex: @media screen and (density(2x)) {...}
*/
@function density($key) {
  @if map-has-key($densities, $key) {
    @return 'min-resolution: #{ map-get( $densities, $key ) }';
  }
}

// This code show the flag on page, the flag will show the current active breakpoints

@if $hmq-enable-tooltip == true {

  :root {

    &::after {
      position: fixed;
      font-family: -apple-system, BlinkMacSystemFont,'Arial', sans-serif;
      cursor: default;
      -webkit-user-select: none;
      user-select: none;
      pointer-events: none;
      z-index: 999999;
      bottom: 16px;
      right: 16px;
      font-weight: bold;
      font-size: 11px;
      line-height: 1.8;
      box-sizing: border-box;
      padding: 16px 24px;
      border-radius: 4px;
      white-space: pre-wrap;
      text-transform: capitalize;
      background-color: #FFF;
      box-shadow: 0 10px 30px rgba( #000, 0.2 );
      color: #212121;

      /*
      Loop through $breakpoints and generate a random text color if $enable-random-color is TRUE
      */
      @if $hmq-enable-random-color == true {
        @each $breakpoint in $breakpoints {
          /*
            Extract the $breakpoint value
          */
          $breakpoint: nth( $breakpoint, 2 );

          @media screen and ( min-width: $breakpoint ) {
            color: hsl( random( 361 ) - 250, 50%, 50% );
          }
        }
      }
    }

    /*
      Extract each $density-value value from $densities
    */
    @each $density in $densities {

      $density-name: nth( $density, 1 );
      $density-value: nth( $density, 2 );
      $dpi: unquote( 'min-resolution: #{ $density-value }' );

      /*
        Extract each key and his value form the $breakpoints map
      */
      @for $i from 1 through length( $breakpoints ) {
        $size-name: nth( nth( $breakpoints, $i ), 1 );
        $size: nth( nth( $breakpoints, $i ), 2 );

        &::after {
          @media screen and ( $dpi ) {
            content: 'Density: #{ $density-value }';

            @media ( orientation: portrait ) {
              content: 'Breakpoint:   None \a Density:         #{ $density-value } (#{ $density-name }) \a Orientation:   Portrait';
            }

            @media ( orientation: landscape ) {
              content: 'Breakpoint:   None \a Density:         #{ $density-value } (#{ $density-name }) \a Orientation:   Landscape';
            }

            @media ( min-width: $size ) {
              content: 'Breakpoint:   #{ $size-name } (#{ $size }) \a Density:         #{ $density-value } (#{ $density-name })' !important;

              @media ( orientation: portrait ) {
                content: 'Breakpoint:   #{ $size-name } (#{ $size }) \a Density:         #{ $density-value } (#{ $density-name }) \a Orientation:   Portrait' !important;
              }

              @media ( orientation: landscape ) {
                content: 'Breakpoint:   #{ $size-name } (#{ $size }) \a Density:         #{ $density-value } (#{ $density-name }) \a Orientation:   Landscape' !important;
              }
            }
          }
        }
      }
    }
  }
}
